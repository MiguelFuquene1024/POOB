#BlueJ class context
comment0.target=AutomataCelular
comment0.text=\r\n\ Clase\ que\ construye\ una\ automata\ celular\r\n\r\n\ @author\ Ivan\ Camilo\ Rincon\ Saavedra\r\n\ @author\ Miguel\ Angel\ Fuquene\ \r\n\ @version1.0\ 12/03/2020\r\n
comment1.params=m
comment1.target=Elemento[][]\ llenarMatriz(Elemento[][])
comment10.params=decidir
comment10.target=void\ recorrer(boolean)
comment10.text=\r\n\ \ \ \ \ \ \ metodo\ que\ recorre\ toda\ la\ automata,\ para\ que\ sus\ celulas\ decidan\ su\ estado\ o\ cambien\ de\ estado\r\n\ \ \ \ \ \ \ @param\ decidir,\ booleano\ que\ dice\ si\ las\ celulas\ deciden\ o\ cambian\r\n
comment11.params=
comment11.target=void\ ticTac()
comment11.text=\r\n\ metodo\ que\ marca\ el\ paso\ del\ tiempo\r\n
comment2.params=
comment2.target=AutomataCelular()
comment3.params=
comment3.target=int\ getLongitud()
comment3.text=\r\n\ \ \ \ \ \ \ @return\ int,\ entero\ que\ representa\ la\ longitud\ de\ la\ automata\r\n
comment4.params=f\ c
comment4.target=Elemento\ getElemento(int,\ int)
comment4.text=\r\n\ @param\ f,\ entero\ que\ representa\ una\ fila\ en\ una\ matriz\ \r\n\ \ \ \ \ \ \ @param\ c,\ entero\ que\ representa\ una\ columna\ en\ una\ matriz\r\n\ \ \ \ \ \ \ @return\ Elemento,\ el\ cual\ es\ al\ que\ pertenece\ a\ la\ f,\ c\ establecida\ en\ la\ automata\r\n
comment5.params=f\ c\ nueva
comment5.target=void\ setElemento(int,\ int,\ Elemento)
comment5.text=\r\n\ \ \ \ \ \ \ @param\ f,\ entero\ que\ representa\ una\ fila\ en\ una\ matriz\ \r\n\ \ \ \ \ \ \ @param\ c,\ entero\ que\ representa\ una\ columna\ en\ una\ matriz\r\n\ \ \ \ \ \ \ @param\ nueva\ ,\ tipo\ Elemnto\ el\ cual\ se\ agregara\ a\ la\ automata\r\n
comment6.params=
comment6.target=void\ algunosElementos()
comment6.text=\r\n\ \ \ \ \ \ \ metodo\ que\ a\u00F1ade\ elementos\ predefinidos\ a\ la\ automata\ Celular\r\n
comment7.params=f\ c
comment7.target=boolean\ checkPos(int,\ int)
comment7.text=\r\n\ @param\ f,\ entero\ que\ representa\ una\ fila\ en\ una\ matriz\ \r\n\ @param\ c,\ entero\ que\ representa\ una\ columna\ en\ una\ matriz\r\n\ @return\ boolean\ ,\ que\ dice\ si\ la\ fila\ y\ columna\ es\ valida\ en\ la\ matriz\r\n\ \r\n
comment8.params=f\ c
comment8.target=int\ vecinos(int,\ int)
comment8.text=\r\n\ @param\ f,\ entero\ que\ representa\ una\ fila\ en\ una\ matriz\ \r\n\ @param\ c,\ entero\ que\ representa\ una\ columna\ en\ una\ matriz\r\n\ @return\ int\ ,\ \ dice\ la\ cantidad\ de\ celulas\ vecinas\ vivas\ que\ tiene\ una\ celula\ en\ la\ posicion\ f,c\r\n\ \r\n
comment9.params=f\ c
comment9.target=int\ vecinOeste(int,\ int)
comment9.text=\r\n\ @param\ f,\ entero\ que\ representa\ una\ fila\ en\ una\ matriz\ \r\n\ @param\ c,\ entero\ que\ representa\ una\ columna\ en\ una\ matriz\r\n\ @return\ int\ ,\ \ el\ cual\ retorna\ 1\ si\ tiene\ un\ vecino\ a\ su\ derecha,\ de\ lo\ contrario\ devuelve\ 0\r\n\ \r\n
numComments=12
